"use strict";function scrollToTop(){$("html, body").animate({scrollTop:0},250)}function onYouTubeIframeAPIReady(){var e=window,t=e.YouTubePlayer,n=e.YT,a=t.onReadyFactory,r=t.videos,i=!0,o=!1,l=void 0;try{for(var s,c=r[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var d=s.value;new n.Player(d.containerId,{videoId:d.videoId,width:d.width||"1",height:d.height||"1",events:{onReady:a(d)},playerVars:{rel:0,modestbranding:1}})}}catch(e){o=!0,l=e}finally{try{!i&&c.return&&c.return()}finally{if(o)throw l}}}function number_to_currency(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.precision||0,a=t.unit||"$",r=n>0?t.separator||".":"",i=t.delimiter||",";if(0===n)return a+number_with_delimiter(e,i);var o=parseFloat(e).toFixed(n).split(".");return a+number_with_delimiter(o[0],i)+r+o[1].toString()}function number_with_delimiter(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".",a=e.toString().split(".");return a[0]=a[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1"+t),a.join(n)}function modalInit(){$(".modal-fade-screen, .modal .zmdi-close").on("click",function(){$(".modal-state").prop("checked",!1),$("body").css({overflow:"inherit",position:"inherit"})}),$(".modal-state").on("change",function(){this.checked&&$("body").css({overflow:"hidden",position:"fixed",width:"100%"})}),$(".modal-inner").on("click",function(e){e.stopPropagation()}),$("#modal-sign-in-link, #modal-sign-up-link").on("click",function(e){e.preventDefault(),$(".modal .register-form").toggle(),$(".modal .login-form").toggle()})}function lookupHst(){var e=void 0,t=void 0,n=void 0,a=void 0;e=$("#company_location").val(),"string"==typeof e&&(n=e.split(","),"object"===("undefined"==typeof n?"undefined":_typeof(n))&&n.length>1&&2===n[1].length&&(a=n[1].trim()),t=JSON.parse($("input[name=hst-lookup]").val()),"undefined"==typeof t[a]?($("input[name=hst-percentage]").val(0),$("#hst-counter").hide()):$("#hst-counter").show()),chatTotal()}function chatTotal(){var e=void 0,t=void 0,n=0,a=void 0,r=parseInt($("#extra_content").val()),i=parseInt($("#number_of_posts").val()),o=parseInt($(".chat-request-form").data("post")),l=parseInt($(".chat-request-form").data("content")),s=parseInt($(".chat-request-form").data("balance"));if($(".posts-count").text(i),$(".extra-content-count").text(r),$(".items-count").text(i+r),0===r?$("#extra-content-counter").toggle(!1):$("#extra-content-counter").toggle(!0),t=parseInt(i)*parseInt(o)+parseInt(l)*parseInt(r),n=$("input[name=hst-percentage]").length?$("input[name=hst-percentage]").val():0,a=t*n,0==a?$(".subtotal-container").hide():a>0&&$(".subtotal-container").show(),e=t+a,$("#total").text("US$"+parseFloat(e).toFixed(2)),$(".hst-price").text("US$"+parseFloat(a).toFixed(2)),$(".subtotal-price").text("US$"+parseFloat(t).toFixed(2)),$(".posts-price").text("US$"+parseFloat(i*o).toFixed(2)),$(".extra-content-price").text("US$"+parseFloat(r*l).toFixed(2)),0==s)$(".positive_available_balance").attr("hidden","true"),$(".negative_available_balance").attr("hidden","true"),$("#final_amount").val(e),$(".credit-fields").removeAttr("hidden");else if(s-e>0)$(".positive_available_balance").removeAttr("hidden"),$(".negative_available_balance").attr("hidden","true"),$("#final_amount").val(0),$(".credit-fields").attr("hidden","true");else{$(".positive_available_balance").attr("hidden","true"),$(".negative_available_balance").removeAttr("hidden");var c=parseFloat(e-s);$("#total_due").text(c.toFixed(2)),$("#final_amount").val(c.toFixed(2)),$(".credit-fields").removeAttr("hidden")}}function requestChat(){$(lookupHst),$("#number_of_posts, #extra_content, #company_location").on("change",lookupHst)}function displaySlideShow(e){var t=function(e){return e.loaded||!$(e).hasClass("lazy")&&e.complete},n=function(e){return $("a",e).map(function(){var e=$(this).attr("href"),t=$(this).attr("data-size").split("x"),n=_slicedToArray(t,2),a=n[0],r=n[1],i=$(this).attr("data-caption");return{src:e,w:a,h:r,title:i}})},a=function(e){var t=window,a=t.PhotoSwipe,r=t.PhotoSwipeUI_Default,i=$(e),o=i.closest(".slide-show-container"),l=n(o),s=$(".slide-show-photo",o).index(i),c={index:s,bgOpacity:.7,showHideOpacity:!0,shareEl:!1,counterEl:!1,arrowEl:!0,preloaderEl:!1},d=o.closest(".influencer-posts").find(".pswp")[0]||$(".pswp")[0],u=new a(d,r,l,c);u.init()};$(".influencer-card[loaded='false']").find(e).on("click",".slide-show-photo",function(e){e.preventDefault();var n=this,r=$(this).find("img");t(r[0])?a(n):r.load(function(){return a(n)})})}function previewImage(){$(".image-preview-container .picture_input").on("change",function(e){var t=$(this).parent().siblings(".image-preview"),n=e.target.files[0];if(!(n.type.indexOf("video")>=0)){var a=new FileReader;a.onload=function(e){var n=new Image;n.src=e.target.result,t.html(n)},a.readAsDataURL(n)}})}function fileUploadBtnInt(){$(".image-preview-container.upload-preview input[type=file]").customFile("new-upload-button",'<div class="icon-container"><i class="zmdi zmdi-download"></i><p>Upload an Image</p></div>');var e=void 0,t=void 0;$(".post-preview-caption").each(function(){e=$(this).html(),e&&(t=e.replace(/(\#\w+)/g,'<span class="hashtag">$1</span>'),$(this).html(t))}),$(".post-preview-caption").each(function(){e=$(this).html(),e&&(t=e.replace(/(\@\w+)/g,'<span class="username">$1</span>'),$(this).html(t))}),$("#chatPhoto input[type=file]").customFile("file-upload-button",'<i class="zmdi zmdi-attachment"></i> Attach File')}var _slicedToArray=function(){function e(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,l=e[Symbol.iterator]();!(a=(o=l.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(r)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();if(String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)},window.autosize&&($.fn.autosize=function(){window.autosize(this)},$.fn.autosizeUpdate=function(){window.autosize.update(this)}),$.fn.geocomplete){var formatResult=function(e){return e.address_components.filter(function(e){var t=_slicedToArray(e.types,1),n=t[0];return["locality","administrative_area_level_1","country"].indexOf(n)!==-1}).map(function(e){var t=e.long_name;return t}).join(", ")};$.fn.geoComplete=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["(regions)"];$(this).geocomplete({types:e}).on("change",function(){$(this).data("geocode:selected",!1)}).on("geocode:result",function(e,t){$(this).val(formatResult(t)).data("geocode:selected",!0).valid()}),$(this).each(function(){var e=$(this);e.val(e.val().trim());var t=e.val();if(0!==t.length){var n=e.data("plugin_geocomplete"),a=n.geocoder;a.geocode({address:t},function(n,a){var r=_slicedToArray(n,1),i=r[0];a===window.google.maps.GeocoderStatus.OK&&formatResult(i)===t&&e.data("geocode:selected",!0).valid()})}})}}$.fn.reverse=function(){return this.pushStack(this.get().reverse(),arguments)},$.fn.visualDatepicker=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=$(this),n=$(this.form),a=!0,r={onValueUpdate:function(){a?a=!1:n.trigger("form:changed")},onClose:function(){t.blur()}},i=$.extend({disableMobile:!0,enableTime:!0,dateFormat:e.enableTime?"M j, Y h:i K":"M j, Y",allowInput:!0},r,e);return t.flatpickr(i),t},$.fn.attachmentUploader=function(){var e=window,t=e.uploader,n=e.console,a=$(this),r=$("#new_attachment"),i=a.data("target"),o=i&&i.length?$(i):r.find(':input[name$="[file_data]"]');""===a.data("progress-bar")&&n.error("No progress bar specified for attachmentUploader, you should add one for good UX.",this);var l=$(a.data("progress-bar")),s=$(".meter",l),c=function(e){return s.css("width",e+"%")},d=void 0,u=void 0;return a.data("upload-only")?(d=function(e,t){return c(parseInt(t.loaded/t.total*100,10))},u=function(){return l.addClass("hidden")}):(r.on("ajax:send",function(){return c(55)}).on("ajax:success",function(){return c(75)}),d=function(e,t){return c(parseInt(t.loaded/t.total*50,10))},u=function(){return r.submit()}),a.fileupload({maxFileSize:52428800,progress:d,add:function(e,n){l.removeClass("hidden"),t.directUpload(n)},fail:function(){c(0)},done:function(e,n){o.val(t.buildPayload(n)),c(0),u()}}),a},$.fn.optionUploader=function(){var e=window,t=e.console,n=e.uploader,a=/^.*\.(jpeg|jpg|png|mov|mp4|avi)$/i,r=$(this),i=$(r.data("target")),o=$(r.data("medium")),l=$(i[0].form);""===r.data("progress-bar")&&t.error("No progress bar specified for optionUploader, you should add one for good UX.",this);var s=$(r.data("progress-bar")),c=$(".meter",s),d=$(r.data("cancel")),u=function(e){return c.css("width",e+"%")},f=function(e){return function(){e.abort(),e.context.remove(),u(0)}};return r.fileupload({acceptFileTypes:a,maxFileSize:104857600,add:function(e,t){n.directUpload(t),d.on("click",f(t))},progress:function(e,t){u(parseInt(t.loaded/t.total*100,10))},done:function(e,t){d.off("click"),o.val(n.fileMedium(t)),i.attr("name","collaboration_content_option["+n.fileMedium(t)+"_data]").val(n.buildPayload(t)),l.submit()}}),r},$.validator&&($.validator.addMethod("bindTo",function(e,t,n){var a=$(n.map(function(e){return':input[name="'+e+'"]'}).join(", ")),r=function(){return a.valid()};return $(t).on("blur",r),!0}),$.validator.addMethod("greaterThan",function(e,t,n){return this.optional(t)||Number(e)===Number($("[name='"+n+"']").val())}),$.validator.addMethod("greaterOrEqualThan",function(e,t,n){return this.optional(t)||Number(e)>=Number($("[name='"+n+"']").val())}),$.validator.addMethod("lesserThan",function(e,t,n){return this.optional(t)||Number(e)<Number($("[name='"+n+"']").val())}),$.validator.addMethod("lesserOrEqualThan",function(e,t,n){return this.optional(t)||Number(e)<=Number($("[name='"+n+"']").val())}),$.validator.addMethod("intlPhoneNumber",function(e,t){return this.optional(t)||$(t).intlTelInput("isValidNumber")}),$.validator.addMethod("notEqualTo",function(e,t,n){return this.optional(t)||e!==$(n).val()}),$.validator.prototype.subset=function(e){var t=this,n=!0;return $(e).find(":input").each(function(){t.element(this)||(n=!1)}),n&&0===$(e).find("label.error:visible").length},$.validator.addMethod("geocodeSelected",function(e,t,n){return this.optional(t)||$(t).data("geocode:selected")},"Please select a location from the dropdown"),$.validator.addMethod("socialUsername",function(e,t,n){return this.optional(t)||/^[a-zA-Z0-9_\.]+$/.test(e)},"Please remove invalid symbols (only letters, numbers, underscores, and periods allowed)"),$.validator.addMethod("relaxedUrl",function(e,t,n){return/^https?/.test(e)||(e="http://"+e),$.validator.methods.url.call(this,e,t,n)},"Please input a valid URL"),$.validator.addMethod("validateEmail",function(e,t,n){return/^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(e)},"Please input a valid email")),window.id=function(){var e=0;return function(){return++e}}(),window.noop=function(){},window.formCache={_store:window.localStorage,_keyFor:function(e){return 0===e.indexOf("formCache_")?e:"formCache_"+e},store:function(e){var t=$(e);return this._store.setItem(this._keyFor(e),t.serialize()),t},load:function(e){var t=this._store.getItem(this._keyFor(e));if(null==t)return null;var n=$(e);return n.trigger("cache:beforeLoad",t),n.deserialize(t),n.trigger("cache:loaded"),n},destroy:function(e){return!!this.has(e)&&(this._store.removeItem(this._keyFor(e)),!0)},has:function(e){return this._store.getItem(this._keyFor(e))},unattach:function(e){this.destroy(e),window.location.reload()},attach:function(e){var t=this,n=this.load(e)||$(e),a=function(){var a=$.debounce(500,function(){return t.store(e)});n.on("change",":input",a),$('input[type="checkbox"], input[type="radio"]',n).on("change",a)};window.setTimeout(a,500)}},window.forex={_cache:{},from:function(e,t){var n=this;return null==this._cache[e]&&(this._cache[e]={}),null!=this._cache[e][t]?(new $.Deferred).resolve(this._cache[e][t]):(e=e.toUpperCase(),t=t.toUpperCase(),$.getJSON("//api.fixer.io/latest?base="+e+"&symbols="+t).then(function(a){var r=a.rates;return n._cache[e][t]=r[t],r[t]}))},convert:function(e,t,n){return this.from(t,n).then(function(t){return Number((e*t).toFixed(2))})}},window.flash={_data:{},icons:{success:"zmdi-check-circle",info:"zmdi-info",error:"zmdi-alert-circle",alert:"zmdi-alert-circle",warning:"zmdi-alert-triangle"},_attach:function(e){$("main.main").prepend(e)},now:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.flash._attach,a=e.toLowerCase();return this._data[a]&&this.remove(a),this._data[a]=t,n($($("#flash_template").text()).addClass("flash-"+a+" alert-"+a).attr("id","flash_"+a).find(".flash-message").html(t||"&nbsp;").end().find(".flash-type .zmdi").addClass(this.icons[a]).end().find(".flash-close a").attr("href",'javascript:flash.remove("'+a+'")').end()),scrollToTop(),a},remove:function(e){delete this._data[e],$("#flash_"+e).remove(),$("body").trigger("flash:clear")},clear:function(){this._data={},$("main.main .flash").remove(),$("body").trigger("flash:clear")}},window.YouTubePlayer={_started:!1,videos:[],requestFullScreen:function(e){var t=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;return!!t&&t.call(e)},init:function(){var e=this;this._started||($("<script>").attr("src","https://www.youtube.com/iframe_api").insertBefore("script:first-of-type"),document.addEventListener("fullscreenchange",function(){document.fullscreenElement||e.stopVideo()},!1),document.addEventListener("msfullscreenchange",function(){document.msFullscreenElement||e.stopVideo()},!1),document.addEventListener("mozfullscreenchange",function(){document.mozFullScreen||e.stopVideo()},!1),document.addEventListener("webkitfullscreenchange",function(){document.webkitIsFullScreen||e.stopVideo()},!1),this._started=!0)},stopVideo:function(){var e=this.videos.find(function(e){var t=e.playing;return t});null!=e&&(e.playing=!1,e.player.stopVideo())},attach:function(e){this._started||this.init(),this.videos.push(e)},onReadyFactory:function(e){var t=window.YouTubePlayer.requestFullScreen;return function(n){e.player=n.target;var a=e.player,r=e.containerId,i=e.placeholderId,o=document.getElementById(i),l=document.getElementById(r);a.setPlaybackQuality("hd720"),$('[data-action="playVideo"]',o).on("click",function(){a.playVideo(),e.playing=!0,t(l)})}}};var identity=function(e){return e},delay=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;return function(){for(var n=arguments.length,a=Array(n),r=0;r<n;r++)a[r]=arguments[r];return window.setTimeout(function(){return e.apply(void 0,a)},t)}},immediately=function(e){return delay(e,0)},throttle=$.throttle;!function(){var e=window,t=e.Turbolinks;null!=t&&(t.pagesCached(12),t.ProgressBar.enable())}(),function(){var e=function(){$.fn.autosize&&$("textarea.autosize").autosize(),$.fn.timeago&&($.timeago.settings.allowFuture=!0,$("time.timeago").timeago()),$.fn.intlTelInput&&$(".intl-tel-input:input").each(function(){var e=$(this),t=$(this.form);if(0!==t.length&&!e.data("plugin_intlTelInput")){e.intlTelInput();var n=$('<input type="hidden"></input>').attr("name",e.attr("name"));t.on("submit",function(){e.intlTelInput("isValidNumber")&&(n.val(e.intlTelInput("getNumber")),t.append(n))})}}),$.fn.lazyload?$("img.lazy").lazyload({threshold:250,skip_invisible:!0}):$("img.lazy").each(function(){var e=$(this);e.attr("src",e.data("original"))}),$.fn.geoComplete&&$(".location-input").geoComplete(),$.fn.tooltip&&$('[data-toggle="tooltip"]').tooltip()};$(document).bind("ready page:change ajaxComplete",e)}(),$(document).on("focus",'input[type="number"]',function(){$(this).on("mousewheel.disableScroll",function(e){return e.preventDefault()})}).on("blur",'input[type="number"]',function(){$(this).off("mousewheel.disableScroll")}).on("keyup change","form[data-watch]",$.debounce(500,function(){var e=!1;$(":input",this).each(function(){return e=$(this).is(":checkbox")&&this.checked!==this.defaultChecked||$(this).is(":radio")||this.value!==this.defaultValue,!e&&void 0}),e&&($(this).trigger("form:changed"),$("[data-reveal-on-change]",this).removeClass("hidden"))})).on("ajax:success","form[data-watch]",$.debounce(500,function(){$("[data-reveal-on-change]",this).addClass("hidden")})).on("form:changed","form[data-autosubmit][data-immediate]",function(){$(this).submit()}).on("form:changed","form[data-autosubmit][data-swift]",$.debounce(500,function(){$(this).submit()})).on("form:changed","form[data-autosubmit]",$.debounce(1e3,function(){var e=$(this),t=$(".status-text",this);t.hide(),e.data("remote")&&t.length&&(e.data("success")||e.data("error"))&&(t.data("success").trim().length&&e.one("ajax:success",function(){return t.text(t.data("success").trim())}),t.data("error").trim().length&&e.one("ajax:error",function(){return t.text(t.data("error").trim())}),e.one("ajax:send",function(){return t.fadeIn(300)}),e.one("ajax:complete",function(){return t.delay(3e3).fadeOut(300)})),e.submit()})).on("click","[data-toggle]",function(){var e=$(this),t=$("#"+e.data("toggle")),n=e.html(),a=e.data("alt");a&&""!==a&&e.html(a).data("alt",n),t.toggleClass("hidden")}).on("click",".not-allowed",function(e){return e.preventDefault(),!1}).on("change",'.check-toggle[type="checkbox"]',function(){if(this&&!this.checked){var e=$(this).attr("name");$('[name="'+e+'"]:not([type="checkbox"]):not([type="hidden"])').val("")}});var brandSettings=Object.freeze({brand:{validate:function(){$(".edit_brand").each(function(){var e=$(this);e.on("ajax:success",function(){flash.remove("error"),flash.now("success","Settings saved!")}),e.validate({ignore:":hidden",focusCleanup:!0,focusInvalid:!1,onkeyup:!1,onclick:!0,onfocusout:function(e){$(e).valid()},highlight:function(e){var t=$(e);t.addClass("error"),t.closest(".input-group").addClass("has-danger")},unhighlight:function(e){var t=$(e);t.removeClass("error"),t.closest(".input-group").removeClass("has-danger")},errorPlacement:function(e,t){var n=t.closest(".input-group");return n.length?n.after(e):t.after(e)},invalidHandler:function(){flash.remove("success"),flash.now("error","Please fix all errors on this page and click save again.")},rules:{"brand[user_attributes][email]":{required:!0,validateEmail:!0,remote:{param:{url:"/users/validate_email",data:{email:function(){return $(':input[name="brand[user_attributes][email]"]').val()},forUser:function(){return $(':input[name="brand[user_attributes][id]"]').val()}}}}},"brand[user_attributes][password]":{minlength:6},"brand[user_attributes][password_confirmation]":{equalTo:"#brand_user_attributes_password"},"brand[first_name]":{required:!0,minlength:2},"brand[last_name]":{required:!0,minlength:2},"brand[phone_number]":{required:!0,remote:"/users/validate_phone"},"brand[company]":{required:!0},"brand[company_website]":{relaxedUrl:!0}},messages:{"brand[user_attributes][email]":{required:"Email field can't be blank.",email:"Your email address must be in the format of name@domain.com",remote:"Oops, that email already exists!"},"brand[user_attributes][password]":{required:"Password field can't be blank.",minlength:"Your password must be at least 6 characters in length"},"brand[user_attributes][password_confirmation]":{required:"You must confirm your password",equalTo:"Passwords must match"},"brand[first_name]":{required:"First name can't be blank.",minlength:"Your first name must be at least 2 characters in length."},"brand[last_name]":{required:"Last name can't be blank.",minlength:"Your last name must be at least 2 characters in length."},"brand[phone_number]":{required:"Phone number can't be blank.",remote:"Please enter a valid phone number."},"brand[company]":{required:"Company name can't be blank."},"brand[company_website]":{url:"Oops! Please enter a valid URL"}}})})}}});$(function(){function e(){var e=k();x.add(q).removeClass("hidden"),"influencer_campaign"===e?(L.prop("checked",!1),q.addClass("hidden"),L.prop("checked",!1)):"branded_content"===e&&(x.addClass("hidden"),N.prop("checked",!1)),"influencer_campaign"!==e&&0===L.filter(":checked").length&&L.filter('[value="bc_launch"]').prop("checked",!0),"branded_content"!==e&&0===N.filter(":checked").length&&N.filter('[value="ic_growth"]').prop("checked",!0),t()}function t(){var e=window,t=e.number_to_currency,n=Y[C.filter(":checked").val()];n&&(S.text(n.name),I.text(t(n.price)));var a=parseInt($("#campaign_native_amplification_budget").val());0===a?$("#summary-native-amp").addClass("hidden"):(O.text(t(a)),$("#summary-native-amp").removeClass("hidden"));var r=M[T.filter(":checked").val()];r&&(z.text(r.name),D.text(t(r.price)));var i=(n?n.price:0)+(a||0)+(r?r.price:0);"paid"===E.filter(":checked").val()&&(U.text(t(.02*i)),i*=1.02),F.text(""+t(i)+"*")}var n='body[data-controller="campaigns"].new,\n                  body[data-controller="campaigns"].create,\n                  body[data-controller="campaigns"].edit';if(0!==$(n).length){!function(e){var t="[name^='"+e+"'][type='checkbox']",n="label[for^='"+e+"']";$(n).on("click",function(){var e=$(this).prev(t);e.prop("checked",!e.prop("checked"))})}("campaign[internal_category_image_ids]");var a=window,r=a.ageSlider;window.noUiSlider.create(r,{start:[$("#campaign_target_age_min").val(),$("#campaign_target_age_max").val()],connect:!0,step:1,range:{min:18,max:70}});var i=window,o=i.valueMinSpan,l=i.valueMaxSpan,s=document.getElementById("campaign_target_age_min"),c=document.getElementById("campaign_target_age_max");r.noUiSlider.on("update",function(e,t){var n=parseInt(e[t]);t?(l.innerHTML=n,c.value=n):(o.innerHTML=n,s.value=n)}),$("#show-full-plan-details").on("click",function(){$(this).parent().addClass("hidden"),$(".package-attributes").removeClass("hidden")}),$(".show-full-plan-details").on("click",function(){$(this).parent().removeClass("mobile-show").addClass("hidden").next(".package-attributes").removeClass("hidden")}),$("#brand_brand_referral_source_id").on("change",function(){var e=$("#brand_brand_referral_source_id :selected").val(),t=$(".referral-description");"1"===e||"11"===e?t.show():t.hide()});var d=$(".content_rights","#summary"),u=$("#campaign_offline_content_rights, #campaign_digital_content_rights");u.on("click",function(){d[u.filter(":checked").length?"removeClass":"addClass"]("hidden")});var f=$(".step-text-wrap"),m=$(".step"),p=$(".step-indicator"),h=$(".step-forward"),g=$(".step-back"),v=$("#step-progress"),b=$("#submit"),_=$(".campaign_form"),w=$(".terms-notice"),y=$(':input[name="campaign[campaign_type]"]'),k=function(){return y.filter(":checked").val()},x=$(".campaign-only-section"),q=$(".content-section"),C=$(':input[name="campaign[influencer_collaboration_package]"]'),T=$(':input[name="campaign[branded_content_package]"]'),S=$("#influencer-collaboration-package"),I=$("#influencer-collaboration-cost"),z=$("#branded-content-package"),D=$("#branded-content-cost"),P=$("#summary-product-shipping"),U=$("#shipping-cost"),F=$("#summary-total"),E=$(':input[name="campaign[product_shipping_fulfilment]"]'),A=$(':input[name="campaign[exclusivity]"]'),O=$("#native-amplification-cost"),j=0,Y={ic_launch:{name:"Launch",price:3e4},ic_seed:{name:"Seed",price:65e3},ic_growth:{name:"Growth",price:1e5},ic_sustain:{name:"Sustain",price:125e3}},M={bc_launch:{name:"Launch",price:15e3},bc_seed:{name:"Seed",price:4e4},bc_growth:{name:"Growth",price:7e4},bc_sustain:{name:"Sustain",price:12e4}},N=$('[name="campaign[influencer_collaboration_package]"]'),L=$('[name="campaign[branded_content_package]"]');y.on("change",e).trigger("change"),C.on("change",t),T.on("change",t);var B=E.filter(":checked").val();E.on("click",function(){B===$(this).val()?(this.checked=!1,B=E.filter(":checked").val()):B=$(this).val(),P["paid"===B?"removeClass":"addClass"]("hidden"),t()});var R=A.filter(":checked").val();A.on("click",function(){R===$(this).val()?(this.checked=!1,A.filter('[value="0"]').prop("checked",!0),R=A.filter(":checked").val()):R=$(this).val()});for(var H=p.size()-1,V=H;H>0;H-=1)$(p[H]).css("left",100/V*H+"%");f.hide(),m.hide(),g.hide(),b.hide(),w.hide(),f.eq(0).css("display","block"),m.eq(0).css("display","block"),$(".step-controls").on("click",".step-forward",function(e){return e.preventDefault(),$("form.step-form").validate().subset("#campaignStep"+(j+1))?(window.events.google("CW_Step"+(j+1)+"Complete"),j+="branded_content"===k()&&4===j?2:1,h.attr("id","step"+(j+1)+"To"+(j+2)),j<p.length&&(f.hide(),m.hide(),p.removeClass("active"),f.eq(j).css("display","block"),m.eq(j).css("display","block").find("textarea.autosize").autosizeUpdate(),p.eq(j).addClass("active"),p.removeClass("complete").slice(0,j).addClass("complete"),v.css("width",parseFloat(p[j].style.left||"0").toString()+"%"),window.scrollTo(0,0),$(window).trigger("scroll"),j>0&&g.css("display","inline-block")),j===p.length-1&&(b.css("display","inline-block"),$(this).hide()),$(".step > div.row:visible").addClass("has-divider"),$(".step > div.row:visible:last").removeClass("has-divider"),!0):($("input.error, select.error").first().focus(),!1)}),$(".step-controls").on("click",".step-back",function(e){e.preventDefault(),j-="branded_content"===k()&&6===j?2:1,f.hide(),m.hide(),p.removeClass("active"),p.removeClass("complete").slice(0,j).addClass("complete"),v.css("width",parseFloat(p[j].style.left||"0").toString()+"%"),f.eq(j).css("display","block"),m.eq(j).css("display","block").find("textarea.autosize").autosizeUpdate(),p.eq(j).addClass("active"),h.attr("id","step"+(j+1)+"To"+(j+2)),j!==p.length&&(b.hide(),h.css("display","inline-block")),0===j&&g.hide(),window.scrollTo(0,0),$(window).trigger("scroll")}),$(".step-controls").on("click","#submit",function(e){e.preventDefault();var t=k();"influencer_campaign"===t?(L.prop("checked",!1),L.prop("checked",!1)):"branded_content"===t&&N.prop("checked",!1),window.events.google("CW_Complete"),te.now("success","Building your campaign recommendations..."),$(this).attr("disabled","disabled"),_.trigger("submit.rails")}),$(".show-options").on("click",function(e){e.preventDefault();var n=$(this).addClass("hidden"),a=n.data("target");$("#"+a+"-options").removeClass("hidden"),t()}),$(".hide-options").on("click",function(e){e.preventDefault();var n=$(this),a=n.data("target");$('.show-options[data-target="'+a+'"]').removeClass("hidden"),$("#"+a+"-options").addClass("hidden"),$(':input[name="campaign['+a+']"].reset-to-this').prop("checked",!0),t()}),_.validate({submitHandler:function(e){e.submit()},rules:{"campaign[objective_other]":{required:'#campaign_objective_other[type="radio"]:checked'},"campaign[exclusivity_other]":{required:'#campaign_exclusivity_other[type="radio"]:checked'},"campaign[target_secondary_interest_id]":{notEqualTo:"#campaign_target_primary_interest_id"}},messages:{"campaign[target_secondary_interest_id]":{notEqualTo:"This field must be different from the primary interest."}},errorElement:"label",errorPlacement:function(e,t){var n=$(t).attr("type");"checkbox"===n||"radio"===n?e.insertBefore(t):e.insertAfter(t)}}),$(".location-input").rules("add","required"),$(".location-input").rules("add","geocodeSelected");var G=window,J=G.nativeAmpSlider,X=G.valueNativeAmp,Z=G.campaign_native_amplification_budget;y.on("change",function(){Z.value=0,t()});var W=Z.value;window.noUiSlider.create(J,{start:2e4,step:5e3,connect:"lower",range:{min:2e4,max:1e6}}),J.noUiSlider.on("update",function(e,n){var a=window,r=a.number_to_currency,i=parseFloat(e[n]);X.innerHTML=r(i),Z.value=i.toFixed(0),t()}),$("#zero-native-amp").on("click",function(){Z.value=0,t()}),$("#update-native-amp").on("click",function(){J.noUiSlider.set(W||2e4),t()}),0===Number(W)?Z.value=W:J.noUiSlider.set(W),C.filter(":checked").trigger("change");var K=window,Q=K.new_campaign,ee=K.formCache,te=K.flash;null!=Q&&(ee.has("#new_campaign")&&te.now("info","Looks like you went away before you could finish your RFP&mdash;that's okay&mdash;the details have been saved for you."),$(Q).on("cache:beforeLoad",function(e,t){t=decodeURIComponent(t);for(var n=$(".addLocation"),a=t.split("location").length-1;a>1;--a)n.click()}).on("cache:loaded",function(){if("0"!==$("#campaign_native_amplification_budget").val()){var e=$("#campaign_native_amplification_budget"),t=e.val();$("#update-native-amp").click(),J.noUiSlider.set(t)}if($('[name="campaign[product_shipping_fulfilment]"]:checked').val()&&$('.show-options[data-target="product_shipping_fulfilment"]').click(),"0"!==$('[name="campaign[exclusivity]"]:checked').val()&&$('.show-options[data-target="exclusivity"]').click(),"{}"!==$("#campaign_guidelines_data").val()){var n=JSON.parse($("#campaign_guidelines_data").val());$attacher.removeClass("hidden").text("Upload a different file"),$fileStatus.removeClass("hidden").find("#guideline-file-name").text(n.metadata.filename).attr("href","https://"+window.s3.bucket+".s3.amazonaws.com/cache/"+n.id)}}),ee.attach("#new_campaign"))}}),$("main.campaigns:not(.edit):not(.new)").on("page:load",function(){if(0!==$("main.campaigns:not(.edit):not(.new)").length){0!==$("main.campaigns.show").length?$(".recommendation-list-tab").addClass("selected"):0!==$("main.campaigns.shortlist").length?$(".shortlist-tab").addClass("selected"):0!==$("main.campaigns.opt_ins").length?$(".opt-ins-tab").addClass("selected"):0!==$("main.campaigns.collaborations").length?$(".collabs-tab").addClass("selected"):0!==$("main.campaigns.brief").length&&$(".campaign-brief-tab").addClass("selected"),window.displaySlideShow(".slide-show-container"),$(window).trigger("scroll"),$("#toggleInfList").on("click",function(e){e.preventDefault();var t=$(this);$(".influencer-card.inactive").toggle(),t.text("Hide Inactive Influencers"===t.text()?"Show Inactive Influencers":"Hide Inactive Influencers")}),$(".add-qualification").on("ajax:success",function(e,t){e.preventDefault();var n=$("\n          <li>\n            "+t.qual_desc+'\n            <a class="remove-qualification" href="/campaigns/'+t.camp_id+"/remove_qualification?campaign_qualification_id="+t.qual_id+'"\n               data-remote="true">\n              <i class="zmdi zmdi-close-circle"></i>\n            </a>\n          </li>\n        ');$("#qualifiers").append(n),$("#description").val("")}),$("#qualifiers").on("ajax:success",".remove-qualification",function(e){e.preventDefault(),$(this).parent().remove()}),$("#showDetails").click(function(){$("body").addClass("modal-open"),$(".modal-fade-screen").css({visibility:"visible",opacity:1,overflow:"scroll"})}),$("#closeCampaignModal").click(function(){$("body").removeClass("modal-open"),$(".modal-fade-screen").css({visibility:"hidden",opacity:0,overflow:"hidden"})});var e=window,t=e.number_to_currency,n=parseInt($("#campaignBudget").html());$("#campaignBudget").html(t(n));var a=parseInt($("#campaignModalBudget").html());$("#campaignModalBudget").html(t(a)),$(".shortlist-view .influencer-list .influencer-thumbnail, .shortlist-view .influencer-list .thumbnail-icon").on("click",function(){var e=$(this),t=$(this).data("url"),n=$(this).data("campaign-influencer-id"),a=parseInt($(".shortlist-tab-content .shortlist-number-wrap .shortlist-number").text());$.ajax({type:"PUT",url:t,data:{campaign_influencer_id:n},dataType:"JSON"}).done(function(){var t=e.parents(".influencer-card");t.remove(),a-=1,$(".shortlist-tab-content .shortlist-number-wrap .shortlist-number").text(a)})})}});var _slicedToArray=function(){function e(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,l=e[Symbol.iterator]();!(a=(o=l.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(r)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),campaigns=Object.freeze({campaignBriefs:{sidebarToggle:function(){$('[data-toggle="affix"]').each(function(){function e(e,t,n){n.scrollTop()>=t.offset().top?(t.height(e.outerHeight()),
e.addClass("affix")):(e.removeClass("affix"),t.height("auto"))}function t(e,t){e.scrollTop()<300&&t.first().addClass("active")}var n=$(window),a=$(this),r=$('<div class="affix-wrapper"></div>'),i=$("#sidemenu li.nav-item a.nav-link");a.before(r),n.on("scroll resize",function(){e(a,r,n),t(n,i)})})},campaignDetails:function(){function e(e){var t=void 0;for(t in e)0==$("#"+e[t]).find(".output-field").length&&($("#"+e[t]).hide(),$("."+e[t]).hide())}var t=["client-program","client-budgets","client-campaign","client-guides","client-organic","client-amp-details","client-requirements","client-demographics","influencer-campaign","influencer-guides","influencer-content"];e(t)},campaignSharedUpdates:function(){$(".addLocation").on("click",function(e){e.preventDefault();var t=$(this).parent(),n=t.siblings(".input-wrapper").first().clone(),a=n.find(":input"),r=t.closest(".location-inputs"),i=$(this).find(".input-wrapper .remove-location");n.children().first().val(""),n.addClass("clone"),n.find(".remove-location").removeClass("hidden"),n.appendTo(r),a.attr("name",a.attr("name").replace(/\d+/,function(e){return parseInt(e,10)+1})),t.appendTo(r),a.geoComplete(),a.rules("add","required"),a.rules("add","geocodeSelected"),i.removeClass("hidden")}),$(".location-inputs").on("click",".remove-location",function(e){e.preventDefault();var t=$(this).find(".input-wrapper").siblings(".remove-location");$(this).parent().remove(),1===t.length?t.addClass("hidden"):t.removeClass("hidden")}),$("#campaign_end_date, #campaign_content_due_date, #campaign_amp_end_date").visualDatepicker({enableTime:!1}),$("#campaign_start_date").visualDatepicker({enableTime:!1,onChange:function(e){var t=_slicedToArray(e,1),n=t[0];if(null!=n){var a=window,r=a.campaign_end_date._flatpickr;(null==r.selectedDates[0]||n-r.selectedDates[0]>0)&&r.setDate(n),r.set("minDate",n),r.open()}}}),$("#campaign_amp_start_date").visualDatepicker({enableTime:!1,onChange:function(e){var t=_slicedToArray(e,1),n=t[0];if(null!=n){var a=window,r=a.campaign_amp_end_date._flatpickr;(null==r.selectedDates[0]||n-r.selectedDates[0]>0)&&r.setDate(n),r.set("minDate",n),r.open()}}});var e=window;e.campaign_proposal_due_date,e.isManager;$("#campaign_proposal_due_date").visualDatepicker({enableTime:!1,minDate:new Date,onChange:function(e){var t=_slicedToArray(e,1),n=t[0];if(null!=n){if(!$("#campaign_proposal_due_date").hasClass("proposal-due-date-edit")){var a=window,r=a.campaign_start_date._flatpickr,i=a.campaign_content_due_date._flatpickr;r.set("minDate",n.fp_incr(5)),i.set("minDate",n.fp_incr(5))}$(".flatpickr-calendar").removeClass("open")}},disable:[function(e){return 0===e.getDay()||6===e.getDay()}]}),$(".flatpickr-input").each(function(){var e=this.getAttribute("value");null!=e&&0!==e.length&&this._flatpickr.setDate(e,!1,"Y-m-d")});var t=$('label[for="attach_file"]'),n=$("#uploaded-file");$("#attach_file").attachmentUploader().on("fileuploadadd",function(){t.addClass("hidden"),n.addClass("hidden")}).on("fileuploadfail",function(){t.removeClass("hidden"),n.addClass("hidden")}).on("fileuploaddone",function(e,a){var r=_slicedToArray(a.files,1),i=r[0],o=a.formData.key,l=a.url;t.removeClass("hidden").text("Upload a different file"),n.removeClass("hidden").find("#guideline-file-name").text(i.name).attr("href",l+"/"+o)}),$("#remove-guidelines").on("click",function(){n.addClass("hidden").find("#guideline-file-name").text("").attr("href",""),t.removeClass("hidden").text("Upload a file"),$("#campaign_guidelines_data").val("{}")})},internalCategoryImages:function(){function e(e){var t=$(e).parents(".image-box").prev("input").attr("id");$(t).prop("checked",!$(t).prop("checked"));var n=$(e).find("img").attr("alt"),a=$.inArray(n,window.ici);if(a>=0?window.ici.splice(a,1):window.ici.push(n),$(".ici-number").text(window.ici.length),0==window.ici.length){var r='<input type="hidden" name="campaign[internal_category_image_ids][{}]" id="ici_clear">';$(".modal .edit_campaign .internal-images").prepend(r)}else $("#ici_clear").remove()}window.ici=$.map($(".image-list img"),function(e){return $(e).attr("alt")}),$(".ici-number").text(window.ici.length),$(".internal-images label").on("click",function(){e(this)})}}}),slideShows=Object.freeze({bsCarousels:{landingPageCarousel:function(){$("#influencer-carousel-1, #influencer-carousel-2").carousel({interval:!1}),$("#influencer-carousel-1 .carousel-item,#influencer-carousel-2 .carousel-item").each(function(){var e=$(this).next();e.length||(e=$(this).siblings(":first")),e.children(":first-child").clone().appendTo($(this))})},thumbnailSlider:function(){$("#thumbnail-slider .carousel-item").each(function(){var e=$(this).next();e.length||(e=$(this).siblings(":first")),e.children(":first-child").clone().appendTo($(this)),e.next().length>0?e.next().children(":first-child").clone().appendTo($(this)):$(this).siblings(":first").children(":first-child").clone().appendTo($(this))})},influencerThumbnailSlider:function(){for(var e=$(".carousel-inner > .carousel-img"),t=0;t<e.length;t+=4)e.slice(t,t+4).wrapAll("<div class='carousel-item'></div>");$(".thumbnail-slider .carousel-item:first-child").addClass("active"),$.fn.lazyload?$("img.lazy").lazyload({threshold:100,skip_invisible:!1}):$("img.lazy").each(function(){var e=$(this);e.attr("src",e.data("original"))})},carouselTouchControl:function(){$(".carousel").on("touchstart",function(e){var t=e.originalEvent.touches[0].pageX;$(this).one("touchmove",function(e){var n=e.originalEvent.touches[0].pageX;Math.floor(t-n)>5?$(this).carousel("next"):Math.floor(t-n)<-5&&$(this).carousel("prev")}),$(this).on("touchend",function(){$(this).off("touchmove")})})}}}),brandCampaign=Object.freeze({contentApproval:{collabSlider:function(){$("#collab-slider .carousel-item:first-child").addClass("active"),$("#toggle[data-slide-to]").on("click",function(){$("#collab-slider").carousel($(this).data("slide-to"))});var e=$(".carousel-item").length,t=$(".carousel-item.active").index()+1;$(".num").html(""+t+"/"+e),$("#collab-slider").bind("slide.bs.carousel",function(){t=$(".carousel-item.active").index()+1,$(".num").html(""+t+"/"+e)}),$(document).on("show.bs.modal",".modal",function(e){var t=1040+10*$(".modal:visible").length;$(this).css("z-index",t),$(".modal-backdrop").length>=$(".modal").length&&$(".modal-backdrop:last").remove(),setTimeout(function(){$(".modal-backdrop").not(".modal-stack").css("z-index",t-1).addClass("modal-stack")},0)})}}}),_slicedToArray=function(){function e(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,l=e[Symbol.iterator]();!(a=(o=l.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(r)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){var e=window,t=e.isManager,n=function(){},a=window.fbq&&!t?function(e,t,n){var a={};for(var r in n)n.hasOwnProperty(r)&&(a[r]=t.find('[name="'+n[r]+'"]').val());window.fbq("track",e,a)}:n,r=window.ga&&!t?function(e){var t=e.split("_"),n=_slicedToArray(t,2),a=n[0],r=n[1];window.ga("send","event",a,r)}:n;window.events={facebook:a,google:r}}(),$("body[data-controller='influencers'][data-action='chat_request']").ready(function(){$("#new_chat_request").validate({rules:{campaign_title:{required:!0},"chat_request[message]":{required:!0}},messages:{campaign_title:{required:"Give a campaign title to this chat."},"chat_request[message]":{required:"This field can't be blank. Take this opporunity to introduce yourself to the influencer and explain the collaboration you'd like to do with them."}}})}),$(document).ready(function(){$(".edit_post_preview").each(function(){$(this).validate({ignore:"",rules:{"post_preview[photo]":{required:function(e){return"false"===$(e).closest(".file-container").find("[name=photo_present]").val()}},"post_preview[caption]":{required:!0},"post_preview[post_date]":{required:!0}},messages:{"post_preview[photo]":{required:"Please add a photo to your post for the collaborating brand to see."},"post_preview[caption]":{required:"Add in a caption with your post to show to the brand."},"post_preview[post_date]":{required:"Please select a post date and re-submit."}},errorElement:"div",errorLabelContainer:".error-text"})}),$(".edit_extra_content").each(function(){$(this).validate({rules:{"extra_content[file]":{required:function(e){return"false"===$(e).closest(".file-container").find("[name=photo_present]").val()},"extra_content[title]":{required:!0}},messages:{"extra_content[file]":{required:"Please add a photo to your post for the collaborating brand to see. If you see a photo in the post preview area, try uploading the same photo again and resubmitting."},"extra_content[title]":{required:"Add in a caption with your post to show to the brand."}},errorElement:"div",errorLabelContainer:".error-text"}})})}),$("body.new, body.edit, body.create, main.influencer_settings").ready(function(){$("#new_brand").validate({submitHandler:function(e){if($(".error:visible",e).length)return!1;var t=$('input[type="submit"]',e);return t.prop("disabled",!0).text(t.data("disable-with")),window.events.facebook("BrandRegistration",$(e),{email:"email",phone:"brand[phone_number]",company:"brand[company]",firstName:"brand[first_name]",lastName:"brand[last_name]"}),!0},rules:{email:{required:!0,email:!0,remote:"/users/validate_email"},password:{required:!0,minlength:6},password_confirmation:{required:!0,equalTo:"#password"},"brand[first_name]":{required:!0,minlength:2},"brand[last_name]":{required:!0,minlength:2},"brand[phone_number]":{required:!0,intlPhoneNumber:!0},"brand[company]":{required:!0},"brand[budget]":{required:!0,digits:!0,range:[0,2147483647]},"brand[brand_referral_source_id]":{required:!0},"brand[referral_source_desc]":{required:"#brand_referral_source_desc:visible"}},messages:{email:{required:"Email field can't be blank.",email:"Your email address must be in the format of name@domain.com",remote:"Oops, that email already exists!"},password:{required:"Password field can't be blank.",minlength:"Your password must be at least 6 characters in length."},password_confirmation:{requird:"Please confirm your password.",equalTo:"Your passwords must match."},"brand[first_name]":{required:"First name can't be blank.",minlength:"Your first name must be at least 2 characters in length."},"brand[last_name]":{required:"Last name can't be blank.",minlength:"Your last name must be at least 2 characters in length."},"brand[phone_number]":{required:"Phone number can't be blank.",intlPhoneNumber:"Please enter a valid phone number."},"brand[company]":{required:"Company name can't be blank."},"brand[budget]":{required:"Budget can't be blank.",digits:"Please enter a whole number.",range:"Value too high."}}})});var header=Object.freeze({landingPages:{mobileNav:function(){$(".nav-link").reverse().each(function(){if(window.location.href.indexOf($(this).attr("href"))!==-1)return $(this).addClass("active"),!1}),$("#nav-icon").click(function(){$(this).toggleClass("open")})},stickyBanner:function(){$(window).scroll(function(){if(window.innerHeight+window.scrollY>=document.body.scrollHeight)var e=!0;$(window).scrollTop()>320||e?$(".banner").addClass("sticky"):$(".banner").removeClass("sticky")})},scrollTo:function(){$(".navbar-nav li a[href^='#']").on("click",function(e){e.preventDefault();var t=$(this.hash),n=$(this.hash).offset().top-.25*($(window).height()-t.height());$("html, body").animate({scrollTop:n},500)})}}}),settings=Object.freeze({influencer:{contentStyle:function(){function e(e){var n=$(e).parents(".image-box").prev("input");n.prop("checked",!n.prop("checked")),t||(t=!0,$.ajax({url:"/influencers/update",method:"POST",data:$("form.edit_influencer").serialize(),success:function(){n.prop("checked",!n.prop("checked")),t=!1}}))}var t=!1;$(".internal-images label").on("click",function(){e(this)})},paymentRails:function(){var e=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"refresh_payment_rails";return $.ajax({url:e,method:"GET",dataType:"script"})};$("#payment-modal").on("shown.bs.modal",function(){return $(window).on("beforeunload pagehide",function(){return e()})}).on("hidden.bs.modal",function(){return e()}),$("body").on("click","#set_primary_link",function(t){t.preventDefault();var n=$(this).attr("recipient_id");n&&e(n)}).on("click","#del_payout_link",function(t){t.preventDefault();var n=$(this).attr("recipient_id");return!(!n||!window.confirm("Are you sure you want to remove this payout method?"))&&(e(n),!0)})},validate:function(){$(".new_influencer, .edit_influencer").each(function(){var e=this,t=$(this),n=function(t){var n=$(e).find(':input[name="'+t+'"]').val();return function(e){return $(e).val()!==n}},a='[name*="demographic_info_attributes"]';$.validator.addMethod("check_date_of_birth",function(){var e=$("#influencer_birthdate_3i").val(),t=$("#influencer_birthdate_2i").val(),n=$("#influencer_birthdate_1i").val(),a=18,r=new Date;r.setFullYear(n,t-1,e);var i=new Date;return i.setFullYear(i.getFullYear()-a),i>r},"You must be at least 18 years of age."),t.on("ajax:success",function(){flash.remove("error"),flash.now("success","Settings saved!")}),t.validate({ignore:":hidden",focusCleanup:!0,focusInvalid:!1,onkeyup:!1,onclick:!0,highlight:function(e){var t=$(e);t.addClass("error"),t.closest(".input-group").addClass("has-danger")},unhighlight:function(e){var t=$(e);t.removeClass("error"),t.closest(".input-group").removeClass("has-danger")},errorPlacement:function(e,t){if(t.is(a))return $("#demographic-error-container").html(e);var n=t.closest(".input-group");if(n.length)return n.after(e);var r=t.parent().closest(".intl-tel-input");return r.length?r.after(e):t.after(e)},invalidHandler:function(){flash.remove("success"),flash.now("error","Please fix all errors on this page and click save again.")},rules:{"influencer[user_attributes][email]":{required:!0,email:!0,remote:{param:{url:"/users/validate_email",data:{email:function(){return $(':input[name="influencer[user_attributes][email]"]').val()},forUser:function(){return $(':input[name="influencer[user_attributes][id]"]').val()}}}}},"influencer[user_attributes][password]":{minlength:6},"influencer[user_attributes][password_confirmation]":{equalTo:"#influencer_user_attributes_password"},"influencer[first_name]":{required:!0,minlength:2},"influencer[last_name]":{required:!0,minlength:2},"influencer[gender]":{required:!0},"influencer[phone_number]":{required:!0,intlPhoneNumber:!0},"influencer[birthdate(1i)]":{required:!0,check_date_of_birth:!0},"influencer[birthdate(2i)]":{required:!0},"influencer[birthdate(3i)]":{required:!0},"influencer[location]":{required:!0,geocodeSelected:!0},"influencer[influencer_referral_source_id]":{required:!0},"influencer[referral_source_desc]":{required:!0},"influencer[hst_number]":{required:':input[name="influencer[includes_hst]"][type="checkbox"]:checked'},"influencer[photo_rate]":{required:!0,bindTo:["[instagram_channel_attributes][clip_rate]","[instagram_channel_attributes][photo_rate]","[instagram_channel_attributes][album_rate]","[facebook_channel_attributes][photo_rate]","[twitter_channel_attributes][photo_rate]"].map(function(e){return"influencer"+e})},"influencer[video_rate]":{required:!0,bindTo:["[instagram_channel_attributes][video_rate]","[you_tube_channel_attributes][video_rate]"].map(function(e){return"influencer"+e})},"influencer[instagram_channel_attributes][username]":{required:!0,minlength:2,socialUsername:!0,remote:{param:{url:"/valid/instagram/username"},depends:n("influencer[instagram_channel_attributes][username]")}},"influencer[instagram_channel_attributes][photo_rate]":{required:!0,number:!0,greaterOrEqualThan:"influencer[photo_rate]"},"influencer[instagram_channel_attributes][video_rate]":{required:!1,number:!0,greaterOrEqualThan:"influencer[video_rate]"},"influencer[instagram_channel_attributes][clip_rate]":{required:!1,number:!0,greaterOrEqualThan:"influencer[photo_rate]"},"influencer[instagram_channel_attributes][album_rate]":{required:!1,number:!0,greaterOrEqualThan:"influencer[photo_rate]"},"influencer[instagram_channel_attributes][story_rate]":{required:!1,number:!0},"influencer[instagram_channel_attributes][live_rate]":{required:!1,number:!0},"influencer[you_tube_channel_attributes][username]":{required:"#you_tube_enabled:checked",socialUsername:!0,remote:{param:{url:"/valid/you_tube/username"},depends:n("influencer[you_tube_channel_attributes][username]")}},"influencer[you_tube_channel_attributes][video_rate]":{required:"#you_tube_enabled:checked",number:!0,greaterOrEqualThan:"influencer[video_rate]"},"influencer[you_tube_channel_attributes][live_rate]":{required:!1,number:!0},"influencer[snapchat_channel_attributes][username]":{required:"#snapchat_enabled:checked",socialUsername:!0,remote:{param:{url:"/valid/snapchat/username"},depends:n("influencer[snapchat_channel_attributes][username]")}},"influencer[snapchat_channel_attributes][story_rate]":{required:!1,number:!0},"influencer[facebook_channel_attributes][username]":{required:"#facebook_enabled:checked",socialUsername:!0,remote:{param:{url:"/valid/facebook/username"},depends:n("influencer[facebook_channel_attributes][username]")}},"influencer[facebook_channel_attributes][photo_rate]":{required:"#facebook_enabled:checked",number:!0,greaterOrEqualThan:"influencer[photo_rate]"},"influencer[facebook_channel_attributes][live_rate]":{required:!1,number:!0},"influencer[facebook_channel_attributes][story_rate]":{required:!1,number:!0},"influencer[twitter_channel_attributes][username]":{required:"#twitter_enabled:checked",socialUsername:!0,remote:{param:{url:"/valid/twitter/username"},depends:n("influencer[twitter_channel_attributes][username]")}},"influencer[twitter_channel_attributes][photo_rate]":{required:"#twitter_enabled:checked",number:!0,greaterOrEqualThan:"influencer[photo_rate]"},"influencer[demographic_info_attributes][significant_other]":{require_from_group:[1,a+'[type="checkbox"]']},"influencer[demographic_info_attributes][child]":{require_from_group:[1,a+'[type="checkbox"]']},"influencer[demographic_info_attributes][sibling]":{require_from_group:[1,a+'[type="checkbox"]']},"influencer[demographic_info_attributes][dog]":{require_from_group:[1,a+'[type="checkbox"]']},"influencer[demographic_info_attributes][cat]":{require_from_group:[1,a+'[type="checkbox"]']},"influencer[demographic_info_attributes][other_pet]":{require_from_group:[1,a+'[type="checkbox"]']},"influencer[demographic_info_attributes][happy_alone]":{require_from_group:[1,a+'[type="checkbox"]']}},messages:{password:{required:"Password field can't be blank.",minlength:"Your password must be at least 6 characters in length"},password_confirmation:{required:"Password Confirmation field can't be blank.",minlength:"Your password must be at least 6 characters in length",equalTo:"Oops! Both passwords must match."},"influencer[user_attributes][email]":{required:"Email field can't be blank",email:"Your email address must be in the format of name@domain.com",remote:"Oops, that email already exists!"},"influencer[user_attributes][password]":{required:"Password field can't be blank.",minlength:"Your password must be at least 6 characters in length"},"influencer[user_attributes][password_confirmation]":{required:"You must confirm your password",equalTo:"Passwords must match"},"influencer[first_name]":{required:"First name can't be blank.",minlength:"Your first name must be at least 2 characters in length"},"influencer[last_name]":{required:"Last name can't be blank.",minlength:"Your last name must be at least 2 characters in length"},"influencer[gender]":{required:"Gender can't be blank"},"influencer[phone_number]":{required:"Phone can't be blank",intlPhoneNumber:"Please enter a valid phone number"},"influencer[birthdate(1i)]":{required:"Birth date can't be blank"},"influencer[birthdate(2i)]":{required:"Birth date can't be blank"},"influencer[birthdate(3i)]":{required:"Birth date can't be blank"},"influencer[hst_number]":{required:"We require a sales tax number"},"influencer[location]":{required:"Location can't be blank"},"influencer[influencer_referral_source_id]":{required:"Please let us know how you heard about us"},"influencer[referral_source_desc]":{required:"This field can't be blank"},"influencer[instagram_channel_attributes][username]":{required:"You must include a valid instagram username to sign up as an influencer",remote:"Uh oh, that username is either invalid or already in use"},"influencer[instagram_channel_attributes][photo_rate]":{required:"You must set a price for your Instagram photo posts",greaterOrEqualThan:"Your Instagram posting rate must be greater than or equal to your branded content photo rate"},"influencer[instagram_channel_attributes][video_rate]":{required:"You must set a price for your Instagram video posts.",greaterOrEqualThan:"Your Instagram posting rate must be greater than or equal to your branded content video rate"},"influencer[instagram_channel_attributes][album_rate]":{required:"You must set a price for Instagram carousels.",greaterOrEqualThan:"Your Instagram carousel rate must be greater than or equal to your branded content photo rate"},"influencer[instagram_channel_attributes][clip_rate]":{required:"You must set a price for Instagram boomerangs.",greaterOrEqualThan:"Your Instagram boomerang rate must be greater than or equal to your branded content photo rate"},"influencer[you_tube_channel_attributes][username]":{required:"Please enter your YouTube channel URL",minlength:"Please make sure you include your full YouTube URL",remote:"Uh oh, that URL is either invalid or already in use"},"influencer[you_tube_channel_attributes][video_rate]":{greaterOrEqualThan:"Your YouTube posting rate must be greater than or equal to your branded content video rate"},"influencer[facebook_channel_attributes][username]":{minlength:"Please make sure you include your full Facebook URL",remote:"Uh oh, that URL is either invalid or already in use"},"influencer[facebook_channel_attributes][photo_rate]":{greaterOrEqualThan:"Your Facebook posting rate must be greater than or equal to your branded content photo rate"},"influencer[snapchat_channel_attributes][username]":{remote:"Uh oh, that username is either invalid or already in use"},"influencer[twitter_channel_attributes][username]":{remote:"Uh oh, that username is either invalid or already in use"},"influencer[twitter_channel_attributes][photo_rate]":{greaterOrEqualThan:"Your Twitter posting rate must be greater than or equal to your branded content photo rate"}},errorClass:"error"})})}}}),mayhem=Object.freeze({optIn:{emailPreview:function(e){var t=$("#edit_"+e),n=$("#update_preview",t),a=$("#preview_"+e,t),r=function(e,t){return a.html(t.render_html)};n.on("ajax:success",r)},requirePayoutPreferences:function(e,t,n){var a=$("body"),r=$(e),i=$(n),o='body[data-controller="collaborations"].show',l=!1;a.on("click","#payment-rails-add",function(e){e.preventDefault(),$(this).closest(".field").next(".verify-modal").css("display","block")}),$("#payment-modal").on("hidden.bs.modal",function(e){var t="/settings/refresh_payment_rails?old_ver=true";!l&&t&&(l=!0,$.ajax({url:t,method:"GET",dataType:"script",success:function(){l=!1}}))}),a.on("click",".set_primary_link",function(e){e.preventDefault();var t=$(this).attr("recipient_id"),n="/settings/set_payment_rails_primary?old_ver=true&recipient_id="+t;!l&&n&&(l=!0,$.ajax({url:n,method:"GET",dataType:"script",success:function(){l=!1}}))}),$(o).on("click","#del_payout_link",function(e){e.preventDefault();var t=$(this).attr("recipient_id"),n="/settings/delete_payment_rails?old_ver=true&recipient_id="+t;window.confirm("Are you sure you want to remove this payout method?")&&!l&&n&&(l=!0,$.ajax({url:n,method:"GET",dataType:"script",success:function(){l=!1}}))}),a.on("click","#edit_payout_link",function(e){e.preventDefault(),$(this).closest("#payout-table").nextAll(".verify-modal:first").css("display","block")}),a.on("click","#influencer_includes_hst",function(){$("#influencer_hst_number").closest("span").toggle($(this).checked)}),a.on("click","#accept_terms",function(){var t=$(this).is(":checked"),n=$(".payout-options").html().indexOf("label")!==-1||$("#payment-rails-ready").hasClass("hidden");$(e).attr("disabled",(!t||!n)&&"disabled")}),i.is(":checked")||i.parent().nextAll("#hst_number_container:first").hide(),r.attr("disabled","disabled")}},conversation:{init:function(e){var t=window,n=t.delay,a=$(window),r=$("body"),i=$(e),o=$("#conversation_message_list",e),l=$(".collab-content-messages"),s=$(".manager-details_lower"),c=$(".client-content__chat"),d=$(".compose-message",e),u=d.find("textarea.autosize"),f=d.find("[type='submit']"),m=$("#new_collaboration_message",e),p=$("#action.upload_progress",e),h=$(".meter",p),g=$(".attachment-trigger",e),v=u.autosizeUpdate,b=n(function(){y(),o.scrollTop(o.prop("scrollHeight")+1500)}),_=n(function(){v(),s.scrollTop(l.prop("scrollHeight")+1e4),c.scrollTop(l.prop("scrollHeight")+1e4)});navigator.platform.indexOf("iPhone")!==-1&&u.focusin(function(){o.hide(),d.css("top",$(".conversation-header").outerHeight()),a.scrollTop(0)}).focusout(function(){o.show(),d.css("top","auto"),a.scrollTop($(document).height())});var w=function(e){return h.css("width",e+"%")},y=function(){var e=parseInt(o.css("padding-top"))+parseInt(o.css("padding-bottom")),t=i.outerHeight()-d.outerHeight()-e;return o.height(t),t},k=function(e){var t=e.file_data.metadata.filename,n=e.file_url;u.val("Check out this file: ["+t+"]("+n+")"),x(),m.one("ajax:send",function(){return w(85)}).one("ajax:success",function(){w(100),p.addClass("hidden")}),f.click()},x=function(){u.prop("disabled",!1),f.prop("disabled",!1)},q=function(){u.prop("disabled","disabled"),f.prop("disabled","disabled")},C=function(){var e=u.val().trim().length?"add":"remove";g[e+"Class"]("hidden")},T=m.attr("action").slice(1,-1).replace(/\//g,"_"),S=function(){return window.localStorage.setItem(T,u.val())},I=function(){return window.localStorage.removeItem(T)},z=function(){u.val(window.localStorage.getItem(T)),C()};z(),m.on("keyup",$.debounce(250,S)).on("ajax:complete",I).on("ajax:complete",v).on("ajax:complete",C),$("#attach_file").attachmentUploader().on("fileuploadadd",q).on("fileuploadfail",x),$("#new_attachment").on("ajax:success",function(e,t){return k(t)}),b(),i.on("collab:messageAdded",_),i.on("collab:messageAdded",b),r.on("flash:clear",function(){return a.trigger("resize")}),a.on("resize",$.debounce(250,y)),a.on("resize",$.debounce(100,v)),u.on("keyup",C),u.on("autosize:resized",y),$('a[href="#influencer-stage"], a[href="#conversation-view"]').on("click",function(e){e.preventDefault();var t=$(this);t.closest(".conversation-view, .actionable-view").addClass("mobile-hide").removeClass("mobile-show"),$(t.attr("href")).removeClass("mobile-hide").addClass("mobile-show"),b(),_()})}},invoice:{toggleCancellationModal:function(e){var t=$(e);t.on("click",function(n){var a=$(n.target);(a.is(".close-modal")||a.is(".zmdi-close")||a.is(e))&&t.remove()}),$("textarea.autosize",e).autosize(),$("form",e).validate({rules:{reason:{required:!0,minlength:1}},messages:{reason:{required:"Please select a reason."}}})},updateRate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.identity;return function(){var t=$(this.form),n=t.find('[name$="[cost]"]'),a=t.data("influencer"),r=e($(this).val(),t),i=function(e){var t=function(){return n.val(e)};n.is(":not(:focus)")?t():n.on("blur",function(){return n.val().trim()||t()})};r?$.getJSON("/influencers/"+a+"/rate_card",{get:r,cost:!0},i):i(0)}},editForm:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={enableTime:!1,minDate:new Date};t.minDueAt&&(n.minDate=new Date(t.minDueAt)),t.dueAt&&(n.defaultDate=new Date(t.dueAt)),$("form",e).validate(),$(".post-date",e).visualDatepicker(n)},taskModificationActions:function(e){var t=function(e){return function(t,n){var a=$(e).not(t),r=$(e).not(a),i=!0,o=!1,l=void 0;try{for(var s,c=r[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var d=s.value;$("#"+d+"_"+n).removeClass("hidden").find("textarea.autosize").autosizeUpdate()}}catch(e){o=!0,l=e}finally{try{!i&&c.return&&c.return()}finally{if(o)throw l}}var u=!0,f=!1,m=void 0;try{for(var p,h=a[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var g=p.value;$("#"+g+"_"+n).addClass("hidden")}}catch(e){f=!0,m=e}finally{try{!u&&h.return&&h.return()}finally{if(f)throw m}}}}(["show","edit","drop"]);$(e).on("ajax:complete","form",function(){$(this).trigger("reset").addClass("hidden").siblings(".add-task").removeClass("hidden")}).on("click",".add-task",function(){$(this).addClass("hidden").siblings("form").removeClass("hidden")}).on("click",".cancel-add",function(){$(this).closest("form").addClass("hidden").siblings(".add-task").removeClass("hidden")}).on("click",".edit-item[data-item]",function(){t(["edit"],$(this).data("item"))}).on("click",".cancel-edit[data-item]",function(){t(["show"],$(this).data("item"))}).on("click",".drop-item[data-item]",function(){t(["drop"],$(this).data("item"))})}}});$(function(){function e(){var e=$("#influencer_influencer_referral_source_id"),t=$("#influencer_referral_source_desc"),n=t.closest(".field-wrap"),a=parseInt($(":selected",e).val(),10);[1,2,4,10].indexOf(a)!==-1?n.show():n.hide(),e.attr("disabled",t.attr("disabled"))}var t='body[data-controller="influencers"].new,\n                          body[data-controller="influencers"].create';if(0!==$(t).length){for(var n=$(".step-text-wrap"),a=$(".step"),r=$(".step-indicator"),i=$(".step-back"),o=$("#step-progress"),l=$(".new_influencer"),s=$(".terms-notice"),c=1,d=r.size()-1,u=d;d>0;d-=1)$(r[d]).css("left",100/u*d+"%");n.css("display","none"),a.css("display","none"),i.css("display","none"),s.css("display","none"),$(n[0]).css("display","block"),$(a[0]).css("display","block"),$(a[2]).find("#influencer_instagram_channel_attributes_photo_rate").val(""),$(a[2]).find("#influencer_instagram_channel_attributes_story_rate").val(""),$(".step-controls, .mobile-step-controls").on("click",".step-forward",function(e){if(!l.validate().subset("#onboardStep"+c))return $("input.error, select.error").first().focus(),!1;if($(this).attr("id","step"+(c+1)+"To"+(c+2)),c===r.length){var t=$(".selected-flag:last .iti-flag").attr("class").replace(/iti-flag\s/,"");return $("#influencer_phone_country").val(t),$("#influencer_influencer_referral_source_id, #influencer_referral_source_desc").attr("disabled",!1),$(this).attr("disabled","disabled").html("Creating..."),l.one("ajax:success",function(e,t){var n=t.redirect_to;window.events.google("ON_InfluencerRegistration"),window.events.facebook("ON_InfluencerRegistration",$("#new_influencer"),{email:"influencer[user_attributes][email]",firstName:"influencer[first_name]",lastName:"influencer[last_name]",gender:"influencer[gender]",phoneNumber:"influencer[phone_number]",location:"influencer[location]",yearOfBirth:"influencer[birthdate(1i)]"}),window.flash.now("success","Your Creator account has been created! Sit tight..."),window.delay(function(){window.location.replace(n)},2500)()}),l.one("ajax:error",function(){c=1,$(".step-forward").attr("disabled",!1).attr("id","step1to2").html("Continue"),$(n[4]).css("display","none"),$(a[4]).css("display","none"),r.removeClass("active"),i.css("display","none"),$(n[0]).css("display","block"),$(a[0]).css("display","block"),$(r[0]).addClass("active"),r.removeClass("complete"),o.css("width",parseFloat(r[c-1].style.left||"0").toString()+"%"),$(".progress-wrapper").removeClass(function(e,t){return(t.match(/(^|\s)on-step-\S+/g)||[]).join(" ")}).addClass("on-step-1"),window.flash.now("error","An error occurred during sign up. Please try again. If it keeps failing, contact creators@hashtagpaid.com for more help.")}),l.trigger("submit.rails"),!1}return window.events.google("ON_Step"+c+"Complete"),c===r.length-1?($(this).html("Create Account"),s.show()):s.hide(),c>=1&&i.attr("disabled",!1).css("display","inline-block"),
c<r.length&&($(n[c-1]).css("display","none"),$(a[c-1]).css("display","none"),$(n[c]).css("display","block"),$(a[c]).css("display","block"),r.removeClass("active"),$(r[c]).addClass("active"),r.removeClass("complete").slice(0,c).addClass("complete"),o.css("width",parseFloat(r[c].style.left||"0").toString()+"%"),window.scrollTo(0,0),c+=1,e.preventDefault(),$(".progress-wrapper").removeClass(function(e,t){return(t.match(/(^|\s)on-step-\S+/g)||[]).join(" ")}).addClass("on-step-"+c)),!0}),$(".step-controls, .mobile-step-controls").on("click",".step-back",function(e){return e.preventDefault(),n.css("display","none"),$(".step-forward").html("Continue"),s.hide(),c<=r.length&&($(n[c-1]).css("display","none"),$(a[c-1]).css("display","none"),$(r[c-1]).removeClass("active"),$(n[c-2]).css("display","block"),$(a[c-2]).css("display","block"),$(r[c-2]).addClass("active"),r.removeClass("complete").slice(0,c-2).addClass("complete"),o.css("width",parseFloat(r[c-2].style.left||"0").toString()+"%"),c-=1,$("#stepLocation").html(c+"/5"),$(".progress-wrapper").removeClass(function(e,t){return(t.match(/(^|\s)on-step-\S+/g)||[]).join(" ")}).addClass("on-step-"+c),window.scrollTo(0,0)),1!==c||(i.attr("disabled",!0).css("display","none"),!1)}),$('input[type="checkbox"].show-field').on("change",function(){var e=$(".dependent-field."+$(this).data("channel-name")),t=$(".dependent-field-hide."+$(this).data("medium-name")+"_"+$(this).data("channel-name")),n=$("#influencer_"+$(this).data("medium-name")+"_channel_attributes_"+$(this).data("channel-name")+"-error");this.checked?(e.show(),t.attr("disabled",this.checked),t.find(":input").val(""),t.find(":input").removeClass("error"),n.hide()):(e.hide(),t.removeAttr("disabled",this.checked),e.find(":input").val(""),t.find(":input").val(""))}),$("#influencer_influencer_referral_source_id").on("change",e).trigger("change")}}),$(function(){var e='body[data-controller="campaigns"].show';if(0!==$(e).length){$(".sort-options-toggle").on("click",function(e){e.preventDefault(),$(this).next("ul").toggle()}),$(".toggle-filter").on("click",function(){$(".filter-options").toggleClass("active")});var t=window,n=t.noUiSlider,a=t.followersCountSlider,r=t.postRateSlider;if(a){n.create(a,{start:[parseInt($("#min_fc").val()),parseInt($("#max_fc").val())],connect:!0,step:100,range:{min:5e3,max:parseInt($("#followersCountSlider").attr("data-most-followers"))}});var i=document.getElementById("valueMinFc"),o=document.getElementById("valueMaxFc"),l=document.getElementById("max_fc"),s=document.getElementById("min_fc");a.noUiSlider.on("update",function(e,t){t?(o.innerHTML=parseInt(e[t]).toLocaleString(),l.value=e[t]):(i.innerHTML=parseInt(e[t]).toLocaleString(),s.value=e[t])})}if(r){n.create(r,{start:[parseInt($("#min_pr").val()),parseInt($("#max_pr").val())],connect:!0,step:10,range:{min:parseInt($("#postRateSlider").attr("data-lowest-rate")),max:parseInt($("#postRateSlider").attr("data-highest-rate"))}});var c=document.getElementById("valueMinPr"),d=document.getElementById("valueMaxPr"),u=document.getElementById("max_pr"),f=document.getElementById("min_pr");r.noUiSlider.on("update",function(e,t){t?(d.innerHTML=parseInt(e[t]).toLocaleString(),u.value=e[t]):(c.innerHTML=parseInt(e[t]).toLocaleString(),f.value=e[t])})}}}),$(function(){function e(e){e.preventDefault(),$(".add-shortlist-backdrop").css("display","block"),$(".add-shortlist-container").css("display","block")}function t(e){e.preventDefault(),$(".add-inf-backdrop").css("display","block"),$(".add-inf-container").css("display","block")}var n='body[data-controller="campaigns"].shortlist, body[data-controller="dashboard"].tools';0!==$(n).length&&($("#addInfluencer").on("click",t),$("#addShortlist").on("click",e),$(".share-link-backdrop, .add-inf-backdrop, .add-shortlist-backdrop").on("click",".close-modal",function(e){e.preventDefault(),$(this).parent().parent().hide()}))}),$(function(){var e='body[data-controller="pages"].about';if(0!==$(e).length){var t=Date.now();$(window).scroll(function(){var e=$(window).scrollTop(),n=$(".world-map").offset().top,a=n-e;a<=300&&$(".map-text-wrap").addClass("show");var r=$("section.new-world").offset().top,i=r-e;i<=100?($("#sticky-header").removeClass("up"),$("#sticky-header").addClass("down")):i>100&&($("#sticky-header").removeClass("down"),$("#sticky-header").addClass("up"));var o=Date.now();o-t<=200||(t=Date.now())})}}),$(function(){$(".search").on("click",function(){$("#searchForm").submit()}),$.fn.sidebar&&($(".sidebar").sidebar("setting","closable",!1),$(".sidebar").sidebar("setting","dimPage",!1),$(".menu-button").on("touchstart click",function(e){0===$(".ui.left.vertical.menu.sidebar.animating").length&&$(".sidebar").sidebar("toggle")})),$.fn.dropdown&&$(".ui.dropdown").dropdown({on:"click"}),$.fn.popup&&$(".tooltip").popup(),"campaigns"===$("body").data("controller")&&"show"===$("body").data("action"),displaySlideShow(".slide-show-container"),"searches"===$("body").data("controller")&&"index"===$("body").data("action")&&$("header.complex").show(),"searches"===$("body").data("controller")&&$("header.complex").show()}),function(){function e(e){var t={budget:e},n=!0,a=!1,r=void 0;try{for(var i,l=s[Symbol.iterator]();!(n=(i=l.next()).done);n=!0){var c=i.value;t=o[c](t)}}catch(e){a=!0,r=e}finally{try{!n&&l.return&&l.return()}finally{if(a)throw r}}return t}function t(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"estimated-",n={},a=!0,r=!1,i=void 0;try{for(var o,l=s[Symbol.iterator]();!(a=(o=l.next()).done);a=!0){var c=o.value;n[c]=$("#"+t+c,e)}}catch(e){r=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(r)throw i}}return n}function n(t,n){var a=e(.8*t),r=!0,i=!1,o=void 0;try{for(var c,d=s[Symbol.iterator]();!(r=(c=d.next()).done);r=!0){var u=c.value,f=a[u],m=f.min,p=f.max;n[u].html((l[u]||l.range)(m,p))}}catch(e){i=!0,o=e}finally{try{!r&&d.return&&d.return()}finally{if(i)throw o}}return window._planningEstimates=a,!0}var a=function(e,t){return Math.round(e/t)*t},r=function(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},i=function(e){return r(a(e,5e3))},o={posts:function(e){var t=e.engagement,n=t.min,a=t.max,r=window._planningData.engagement.mean;return e.posts={min:n/r,max:a/r},e},reach:function(e){var t=e.posts,n=t.min,a=t.max,r=window._planningData.follower.mean;return e.reach={min:n*r,max:a*r},e},engagement:function(e){var t=e.budget,n=e.cpe,a=n.min,r=n.max;return e.engagement={min:t/r,max:t/a},e},er:function(e){var t=e.engagement,n=e.reach;return e.er={min:t.min/n.max,max:t.max/n.min},e},cpe:function(e){var t=e.budget,n=window._planningData.cpe,a=n.median,r=n.avedev;return e.cpe={min:(a+r)*Math.pow(2e4/t,.25),max:(a+4*r)*Math.pow(2e4/t,.25)},e},cpm:function(e){var t=e.budget,n=e.reach,a=n.min,r=n.max;return e.cpm={min:t/r*1e3,max:t/a*1e3},e}},l={range:function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";return""+a+n(e)+r+" &ndash; "+a+n(t)+r},posts:function(e,t){return l.range(e,t,Math.round)},reach:function(e,t){return l.range(e,t,i)},engagement:function(e,t){return l.range(e,t,i)},er:function(e,t){var n=function(e){return(100*e).toFixed(2)};return l.range(e,t,n,"","%")},cpe:function(e,t){var n=function(e){return e.toFixed(2)};return l.range(e,t,n,"$")},cpm:function(e,t){var n=function(e){return e.toFixed(2)};return l.range(e,t,n,"$")}},s=["cpe","engagement","posts","reach","er","cpm"];$(function(){var e='body[data-controller="campaigns"].thank_you';if(0!==$(e).length){var a=$("#campaign_budget"),r=$("#estimates"),i=t(r);window.noUiSlider.create(window.budgetSlider,{start:a.val(),step:500,tooltips:[window.wNumb({decimals:0,thousand:",",prefix:"$",postfix:" USD"})],range:{min:2e4,max:25e4}}),window.budgetSlider.noUiSlider.on("update",function(e){var t=Number(e[0]);a.val(t),n(t,i)}),$(".modal-fade-screen").css({visibility:"hidden",opacity:0,overflow:"hidden"}),$("#showDetails").click(function(){$("body").addClass("modal-open"),$(".modal-fade-screen").css({visibility:"visible",opacity:1,overflow:"scroll"})}),$("#closeCampaignModal").click(function(){$("body").removeClass("modal-open"),$(".modal-fade-screen").css({visibility:"hidden",opacity:0,overflow:"hidden"})})}})}();var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_slicedToArray=function(){function e(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,l=e[Symbol.iterator]();!(a=(o=l.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(r)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();$.fn.customFile=function(e,t){return this.each(function(){var n=$(this).addClass(""),a=$('<div class="file-upload-wrapper">'),r=$("<label class="+e+' for="'+n[0].id+'"> </label>');r.html(t),n.css({position:"absolute",left:"-9999px"}),a.insertAfter(n).append(n,r)})},window.uploader=Object.freeze({PRESIGN_PATH:"/attachments/upload/cache/presign",directUpload:function(e){$.getJSON(this.PRESIGN_PATH,this.params(e),this.submit(e))},buildPayload:function(e){var t=e.formData.key.match(/cache\/(.+)/)[1],n=e.files[0],a={size:n.size,filename:n.name.match(/[^\/\\]+$/)[0],mime_type:n.type};return JSON.stringify({id:t,metadata:a,storage:"cache"})},params:function(e){return{filename:e.files[0].name.replace(/\s/g,"_"),_:Date.now()}},submit:function(e){return function(t){e.formData=t.fields,e.url=t.url,e.paramName="file",e.submit()}},fileType:function(e){return e.files[0].type.split("/")[0]},fileMedium:function(e){return{image:"photo",video:"video"}[this.fileType(e)]||"file"}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
